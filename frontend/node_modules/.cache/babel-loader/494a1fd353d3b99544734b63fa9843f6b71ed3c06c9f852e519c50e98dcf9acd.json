{"ast":null,"code":"import { clsx } from 'clsx';\n\n// Utility function for conditional classes\nexport function cn(...inputs) {\n  return clsx(inputs);\n}\n\n// Format file size\nexport function formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// Format date\nexport function formatDate(date) {\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\n\n// Get file type icon\nexport function getFileTypeIcon(fileType) {\n  const icons = {\n    pdf: '📄',\n    txt: '📝',\n    md: '📋',\n    png: '🖼️',\n    jpg: '🖼️',\n    jpeg: '🖼️',\n    webp: '🖼️'\n  };\n  return icons[fileType] || '📄';\n}\n\n// Debounce function\nexport function debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n// Copy to clipboard\nexport async function copyToClipboard(text) {\n  try {\n    await navigator.clipboard.writeText(text);\n    return true;\n  } catch (err) {\n    console.error('Failed to copy text: ', err);\n    return false;\n  }\n}\n\n// Generate unique ID\nexport function generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n// Validate file type\nexport function isValidFileType(file) {\n  const allowedTypes = ['application/pdf', 'text/plain', 'text/markdown', 'image/png', 'image/jpeg', 'image/webp'];\n  const allowedExtensions = ['.pdf', '.txt', '.md', '.png', '.jpg', '.jpeg', '.webp'];\n  const fileExtension = '.' + file.name.split('.').pop().toLowerCase();\n  return allowedTypes.includes(file.type) || allowedExtensions.includes(fileExtension);\n}\n\n// Format message timestamp\nexport function formatMessageTime(date) {\n  const now = new Date();\n  const messageDate = new Date(date);\n  const diffInMinutes = Math.floor((now - messageDate) / (1000 * 60));\n  if (diffInMinutes < 1) return 'Just now';\n  if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n  if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n  return messageDate.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}","map":{"version":3,"names":["clsx","cn","inputs","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","date","Date","toLocaleDateString","year","month","day","hour","minute","getFileTypeIcon","fileType","icons","pdf","txt","md","png","jpg","jpeg","webp","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","copyToClipboard","text","navigator","clipboard","writeText","err","console","error","generateId","random","toString","substr","isValidFileType","file","allowedTypes","allowedExtensions","fileExtension","name","split","pop","toLowerCase","includes","type","formatMessageTime","now","messageDate","diffInMinutes"],"sources":["E:/delivery/frontend/src/utils/index.js"],"sourcesContent":["import { clsx } from 'clsx';\n\n// Utility function for conditional classes\nexport function cn(...inputs) {\n  return clsx(inputs);\n}\n\n// Format file size\nexport function formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// Format date\nexport function formatDate(date) {\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\n\n// Get file type icon\nexport function getFileTypeIcon(fileType) {\n  const icons = {\n    pdf: '📄',\n    txt: '📝',\n    md: '📋',\n    png: '🖼️',\n    jpg: '🖼️',\n    jpeg: '🖼️',\n    webp: '🖼️'\n  };\n  return icons[fileType] || '📄';\n}\n\n// Debounce function\nexport function debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n// Copy to clipboard\nexport async function copyToClipboard(text) {\n  try {\n    await navigator.clipboard.writeText(text);\n    return true;\n  } catch (err) {\n    console.error('Failed to copy text: ', err);\n    return false;\n  }\n}\n\n// Generate unique ID\nexport function generateId() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n// Validate file type\nexport function isValidFileType(file) {\n  const allowedTypes = ['application/pdf', 'text/plain', 'text/markdown', 'image/png', 'image/jpeg', 'image/webp'];\n  const allowedExtensions = ['.pdf', '.txt', '.md', '.png', '.jpg', '.jpeg', '.webp'];\n  \n  const fileExtension = '.' + file.name.split('.').pop().toLowerCase();\n  return allowedTypes.includes(file.type) || allowedExtensions.includes(fileExtension);\n}\n\n// Format message timestamp\nexport function formatMessageTime(date) {\n  const now = new Date();\n  const messageDate = new Date(date);\n  const diffInMinutes = Math.floor((now - messageDate) / (1000 * 60));\n  \n  if (diffInMinutes < 1) return 'Just now';\n  if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n  if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`;\n  \n  return messageDate.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}