{"ast":null,"code":"class VoiceService {\n  constructor() {\n    this.recognition = null;\n    this.synthesis = window.speechSynthesis;\n    this.isListening = false;\n    this.isSpeaking = false;\n    this.onResult = null;\n    this.onError = null;\n    this.onStart = null;\n    this.onEnd = null;\n    this.initializeSpeechRecognition();\n  }\n  initializeSpeechRecognition() {\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      console.warn('Speech recognition not supported in this browser');\n      return;\n    }\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    this.recognition = new SpeechRecognition();\n    this.recognition.continuous = false;\n    this.recognition.interimResults = true;\n    this.recognition.lang = 'en-US';\n    this.recognition.maxAlternatives = 1;\n    this.recognition.onstart = () => {\n      this.isListening = true;\n      if (this.onStart) this.onStart();\n    };\n    this.recognition.onresult = event => {\n      let finalTranscript = '';\n      let interimTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript;\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n      if (this.onResult) {\n        this.onResult({\n          final: finalTranscript,\n          interim: interimTranscript,\n          isFinal: finalTranscript.length > 0\n        });\n      }\n    };\n    this.recognition.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      this.isListening = false;\n      if (this.onError) this.onError(event.error);\n    };\n    this.recognition.onend = () => {\n      this.isListening = false;\n      if (this.onEnd) this.onEnd();\n    };\n  }\n  startListening() {\n    if (!this.recognition) {\n      throw new Error('Speech recognition not supported');\n    }\n    if (this.isListening) {\n      this.stopListening();\n      return;\n    }\n    try {\n      this.recognition.start();\n    } catch (error) {\n      console.error('Error starting speech recognition:', error);\n      throw error;\n    }\n  }\n  stopListening() {\n    if (this.recognition && this.isListening) {\n      this.recognition.stop();\n    }\n  }\n  speak(text, options = {}) {\n    return new Promise((resolve, reject) => {\n      if (!this.synthesis) {\n        reject(new Error('Speech synthesis not supported'));\n        return;\n      }\n\n      // Cancel any ongoing speech\n      this.synthesis.cancel();\n      const utterance = new SpeechSynthesisUtterance(text);\n\n      // Set voice options\n      utterance.rate = options.rate || 1;\n      utterance.pitch = options.pitch || 1;\n      utterance.volume = options.volume || 1;\n      utterance.lang = options.lang || 'en-US';\n\n      // Try to use a specific voice if available\n      const voices = this.synthesis.getVoices();\n      const preferredVoice = voices.find(voice => voice.lang.startsWith('en') && voice.name.includes('Google')) || voices.find(voice => voice.lang.startsWith('en'));\n      if (preferredVoice) {\n        utterance.voice = preferredVoice;\n      }\n      utterance.onstart = () => {\n        this.isSpeaking = true;\n      };\n      utterance.onend = () => {\n        this.isSpeaking = false;\n        resolve();\n      };\n      utterance.onerror = event => {\n        this.isSpeaking = false;\n        reject(new Error(`Speech synthesis error: ${event.error}`));\n      };\n      this.synthesis.speak(utterance);\n    });\n  }\n  stopSpeaking() {\n    if (this.synthesis) {\n      this.synthesis.cancel();\n      this.isSpeaking = false;\n    }\n  }\n  isSupported() {\n    return {\n      speechRecognition: !!(window.SpeechRecognition || window.webkitSpeechRecognition),\n      speechSynthesis: !!window.speechSynthesis\n    };\n  }\n  getAvailableVoices() {\n    if (!this.synthesis) return [];\n    return this.synthesis.getVoices();\n  }\n\n  // Event handlers\n  onSpeechStart(callback) {\n    this.onStart = callback;\n  }\n  onSpeechResult(callback) {\n    this.onResult = callback;\n  }\n  onSpeechError(callback) {\n    this.onError = callback;\n  }\n  onSpeechEnd(callback) {\n    this.onEnd = callback;\n  }\n}\n\n// Create a singleton instance\nconst voiceService = new VoiceService();\nexport default voiceService;","map":{"version":3,"names":["VoiceService","constructor","recognition","synthesis","window","speechSynthesis","isListening","isSpeaking","onResult","onError","onStart","onEnd","initializeSpeechRecognition","console","warn","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","maxAlternatives","onstart","onresult","event","finalTranscript","interimTranscript","i","resultIndex","results","length","transcript","isFinal","final","interim","onerror","error","onend","startListening","Error","stopListening","start","stop","speak","text","options","Promise","resolve","reject","cancel","utterance","SpeechSynthesisUtterance","rate","pitch","volume","voices","getVoices","preferredVoice","find","voice","startsWith","name","includes","stopSpeaking","isSupported","speechRecognition","getAvailableVoices","onSpeechStart","callback","onSpeechResult","onSpeechError","onSpeechEnd","voiceService"],"sources":["E:/delivery/frontend/src/services/voiceService.js"],"sourcesContent":["class VoiceService {\n  constructor() {\n    this.recognition = null;\n    this.synthesis = window.speechSynthesis;\n    this.isListening = false;\n    this.isSpeaking = false;\n    this.onResult = null;\n    this.onError = null;\n    this.onStart = null;\n    this.onEnd = null;\n    \n    this.initializeSpeechRecognition();\n  }\n\n  initializeSpeechRecognition() {\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      console.warn('Speech recognition not supported in this browser');\n      return;\n    }\n\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    this.recognition = new SpeechRecognition();\n    \n    this.recognition.continuous = false;\n    this.recognition.interimResults = true;\n    this.recognition.lang = 'en-US';\n    this.recognition.maxAlternatives = 1;\n\n    this.recognition.onstart = () => {\n      this.isListening = true;\n      if (this.onStart) this.onStart();\n    };\n\n    this.recognition.onresult = (event) => {\n      let finalTranscript = '';\n      let interimTranscript = '';\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          finalTranscript += transcript;\n        } else {\n          interimTranscript += transcript;\n        }\n      }\n\n      if (this.onResult) {\n        this.onResult({\n          final: finalTranscript,\n          interim: interimTranscript,\n          isFinal: finalTranscript.length > 0\n        });\n      }\n    };\n\n    this.recognition.onerror = (event) => {\n      console.error('Speech recognition error:', event.error);\n      this.isListening = false;\n      if (this.onError) this.onError(event.error);\n    };\n\n    this.recognition.onend = () => {\n      this.isListening = false;\n      if (this.onEnd) this.onEnd();\n    };\n  }\n\n  startListening() {\n    if (!this.recognition) {\n      throw new Error('Speech recognition not supported');\n    }\n\n    if (this.isListening) {\n      this.stopListening();\n      return;\n    }\n\n    try {\n      this.recognition.start();\n    } catch (error) {\n      console.error('Error starting speech recognition:', error);\n      throw error;\n    }\n  }\n\n  stopListening() {\n    if (this.recognition && this.isListening) {\n      this.recognition.stop();\n    }\n  }\n\n  speak(text, options = {}) {\n    return new Promise((resolve, reject) => {\n      if (!this.synthesis) {\n        reject(new Error('Speech synthesis not supported'));\n        return;\n      }\n\n      // Cancel any ongoing speech\n      this.synthesis.cancel();\n\n      const utterance = new SpeechSynthesisUtterance(text);\n      \n      // Set voice options\n      utterance.rate = options.rate || 1;\n      utterance.pitch = options.pitch || 1;\n      utterance.volume = options.volume || 1;\n      utterance.lang = options.lang || 'en-US';\n\n      // Try to use a specific voice if available\n      const voices = this.synthesis.getVoices();\n      const preferredVoice = voices.find(voice => \n        voice.lang.startsWith('en') && voice.name.includes('Google')\n      ) || voices.find(voice => voice.lang.startsWith('en'));\n      \n      if (preferredVoice) {\n        utterance.voice = preferredVoice;\n      }\n\n      utterance.onstart = () => {\n        this.isSpeaking = true;\n      };\n\n      utterance.onend = () => {\n        this.isSpeaking = false;\n        resolve();\n      };\n\n      utterance.onerror = (event) => {\n        this.isSpeaking = false;\n        reject(new Error(`Speech synthesis error: ${event.error}`));\n      };\n\n      this.synthesis.speak(utterance);\n    });\n  }\n\n  stopSpeaking() {\n    if (this.synthesis) {\n      this.synthesis.cancel();\n      this.isSpeaking = false;\n    }\n  }\n\n  isSupported() {\n    return {\n      speechRecognition: !!(window.SpeechRecognition || window.webkitSpeechRecognition),\n      speechSynthesis: !!window.speechSynthesis\n    };\n  }\n\n  getAvailableVoices() {\n    if (!this.synthesis) return [];\n    return this.synthesis.getVoices();\n  }\n\n  // Event handlers\n  onSpeechStart(callback) {\n    this.onStart = callback;\n  }\n\n  onSpeechResult(callback) {\n    this.onResult = callback;\n  }\n\n  onSpeechError(callback) {\n    this.onError = callback;\n  }\n\n  onSpeechEnd(callback) {\n    this.onEnd = callback;\n  }\n}\n\n// Create a singleton instance\nconst voiceService = new VoiceService();\n\nexport default voiceService;\n"],"mappings":"AAAA,MAAMA,YAAY,CAAC;EACjBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,SAAS,GAAGC,MAAM,CAACC,eAAe;IACvC,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,KAAK,GAAG,IAAI;IAEjB,IAAI,CAACC,2BAA2B,CAAC,CAAC;EACpC;EAEAA,2BAA2BA,CAAA,EAAG;IAC5B,IAAI,EAAE,yBAAyB,IAAIR,MAAM,CAAC,IAAI,EAAE,mBAAmB,IAAIA,MAAM,CAAC,EAAE;MAC9ES,OAAO,CAACC,IAAI,CAAC,kDAAkD,CAAC;MAChE;IACF;IAEA,MAAMC,iBAAiB,GAAGX,MAAM,CAACW,iBAAiB,IAAIX,MAAM,CAACY,uBAAuB;IACpF,IAAI,CAACd,WAAW,GAAG,IAAIa,iBAAiB,CAAC,CAAC;IAE1C,IAAI,CAACb,WAAW,CAACe,UAAU,GAAG,KAAK;IACnC,IAAI,CAACf,WAAW,CAACgB,cAAc,GAAG,IAAI;IACtC,IAAI,CAAChB,WAAW,CAACiB,IAAI,GAAG,OAAO;IAC/B,IAAI,CAACjB,WAAW,CAACkB,eAAe,GAAG,CAAC;IAEpC,IAAI,CAAClB,WAAW,CAACmB,OAAO,GAAG,MAAM;MAC/B,IAAI,CAACf,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACI,OAAO,EAAE,IAAI,CAACA,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,CAACR,WAAW,CAACoB,QAAQ,GAAIC,KAAK,IAAK;MACrC,IAAIC,eAAe,GAAG,EAAE;MACxB,IAAIC,iBAAiB,GAAG,EAAE;MAE1B,KAAK,IAAIC,CAAC,GAAGH,KAAK,CAACI,WAAW,EAAED,CAAC,GAAGH,KAAK,CAACK,OAAO,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;QAC7D,MAAMI,UAAU,GAAGP,KAAK,CAACK,OAAO,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAACI,UAAU;QACjD,IAAIP,KAAK,CAACK,OAAO,CAACF,CAAC,CAAC,CAACK,OAAO,EAAE;UAC5BP,eAAe,IAAIM,UAAU;QAC/B,CAAC,MAAM;UACLL,iBAAiB,IAAIK,UAAU;QACjC;MACF;MAEA,IAAI,IAAI,CAACtB,QAAQ,EAAE;QACjB,IAAI,CAACA,QAAQ,CAAC;UACZwB,KAAK,EAAER,eAAe;UACtBS,OAAO,EAAER,iBAAiB;UAC1BM,OAAO,EAAEP,eAAe,CAACK,MAAM,GAAG;QACpC,CAAC,CAAC;MACJ;IACF,CAAC;IAED,IAAI,CAAC3B,WAAW,CAACgC,OAAO,GAAIX,KAAK,IAAK;MACpCV,OAAO,CAACsB,KAAK,CAAC,2BAA2B,EAAEZ,KAAK,CAACY,KAAK,CAAC;MACvD,IAAI,CAAC7B,WAAW,GAAG,KAAK;MACxB,IAAI,IAAI,CAACG,OAAO,EAAE,IAAI,CAACA,OAAO,CAACc,KAAK,CAACY,KAAK,CAAC;IAC7C,CAAC;IAED,IAAI,CAACjC,WAAW,CAACkC,KAAK,GAAG,MAAM;MAC7B,IAAI,CAAC9B,WAAW,GAAG,KAAK;MACxB,IAAI,IAAI,CAACK,KAAK,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC;IAC9B,CAAC;EACH;EAEA0B,cAAcA,CAAA,EAAG;IACf,IAAI,CAAC,IAAI,CAACnC,WAAW,EAAE;MACrB,MAAM,IAAIoC,KAAK,CAAC,kCAAkC,CAAC;IACrD;IAEA,IAAI,IAAI,CAAChC,WAAW,EAAE;MACpB,IAAI,CAACiC,aAAa,CAAC,CAAC;MACpB;IACF;IAEA,IAAI;MACF,IAAI,CAACrC,WAAW,CAACsC,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdtB,OAAO,CAACsB,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D,MAAMA,KAAK;IACb;EACF;EAEAI,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACrC,WAAW,IAAI,IAAI,CAACI,WAAW,EAAE;MACxC,IAAI,CAACJ,WAAW,CAACuC,IAAI,CAAC,CAAC;IACzB;EACF;EAEAC,KAAKA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACxB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,CAAC,IAAI,CAAC5C,SAAS,EAAE;QACnB4C,MAAM,CAAC,IAAIT,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACnD;MACF;;MAEA;MACA,IAAI,CAACnC,SAAS,CAAC6C,MAAM,CAAC,CAAC;MAEvB,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACP,IAAI,CAAC;;MAEpD;MACAM,SAAS,CAACE,IAAI,GAAGP,OAAO,CAACO,IAAI,IAAI,CAAC;MAClCF,SAAS,CAACG,KAAK,GAAGR,OAAO,CAACQ,KAAK,IAAI,CAAC;MACpCH,SAAS,CAACI,MAAM,GAAGT,OAAO,CAACS,MAAM,IAAI,CAAC;MACtCJ,SAAS,CAAC9B,IAAI,GAAGyB,OAAO,CAACzB,IAAI,IAAI,OAAO;;MAExC;MACA,MAAMmC,MAAM,GAAG,IAAI,CAACnD,SAAS,CAACoD,SAAS,CAAC,CAAC;MACzC,MAAMC,cAAc,GAAGF,MAAM,CAACG,IAAI,CAACC,KAAK,IACtCA,KAAK,CAACvC,IAAI,CAACwC,UAAU,CAAC,IAAI,CAAC,IAAID,KAAK,CAACE,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAC7D,CAAC,IAAIP,MAAM,CAACG,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACvC,IAAI,CAACwC,UAAU,CAAC,IAAI,CAAC,CAAC;MAEtD,IAAIH,cAAc,EAAE;QAClBP,SAAS,CAACS,KAAK,GAAGF,cAAc;MAClC;MAEAP,SAAS,CAAC5B,OAAO,GAAG,MAAM;QACxB,IAAI,CAACd,UAAU,GAAG,IAAI;MACxB,CAAC;MAED0C,SAAS,CAACb,KAAK,GAAG,MAAM;QACtB,IAAI,CAAC7B,UAAU,GAAG,KAAK;QACvBuC,OAAO,CAAC,CAAC;MACX,CAAC;MAEDG,SAAS,CAACf,OAAO,GAAIX,KAAK,IAAK;QAC7B,IAAI,CAAChB,UAAU,GAAG,KAAK;QACvBwC,MAAM,CAAC,IAAIT,KAAK,CAAC,2BAA2Bf,KAAK,CAACY,KAAK,EAAE,CAAC,CAAC;MAC7D,CAAC;MAED,IAAI,CAAChC,SAAS,CAACuC,KAAK,CAACO,SAAS,CAAC;IACjC,CAAC,CAAC;EACJ;EAEAa,YAAYA,CAAA,EAAG;IACb,IAAI,IAAI,CAAC3D,SAAS,EAAE;MAClB,IAAI,CAACA,SAAS,CAAC6C,MAAM,CAAC,CAAC;MACvB,IAAI,CAACzC,UAAU,GAAG,KAAK;IACzB;EACF;EAEAwD,WAAWA,CAAA,EAAG;IACZ,OAAO;MACLC,iBAAiB,EAAE,CAAC,EAAE5D,MAAM,CAACW,iBAAiB,IAAIX,MAAM,CAACY,uBAAuB,CAAC;MACjFX,eAAe,EAAE,CAAC,CAACD,MAAM,CAACC;IAC5B,CAAC;EACH;EAEA4D,kBAAkBA,CAAA,EAAG;IACnB,IAAI,CAAC,IAAI,CAAC9D,SAAS,EAAE,OAAO,EAAE;IAC9B,OAAO,IAAI,CAACA,SAAS,CAACoD,SAAS,CAAC,CAAC;EACnC;;EAEA;EACAW,aAAaA,CAACC,QAAQ,EAAE;IACtB,IAAI,CAACzD,OAAO,GAAGyD,QAAQ;EACzB;EAEAC,cAAcA,CAACD,QAAQ,EAAE;IACvB,IAAI,CAAC3D,QAAQ,GAAG2D,QAAQ;EAC1B;EAEAE,aAAaA,CAACF,QAAQ,EAAE;IACtB,IAAI,CAAC1D,OAAO,GAAG0D,QAAQ;EACzB;EAEAG,WAAWA,CAACH,QAAQ,EAAE;IACpB,IAAI,CAACxD,KAAK,GAAGwD,QAAQ;EACvB;AACF;;AAEA;AACA,MAAMI,YAAY,GAAG,IAAIvE,YAAY,CAAC,CAAC;AAEvC,eAAeuE,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}