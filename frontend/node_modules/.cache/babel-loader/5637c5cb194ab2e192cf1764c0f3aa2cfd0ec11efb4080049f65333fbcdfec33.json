{"ast":null,"code":"var _jsxFileName = \"E:\\\\delivery\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Toaster } from 'react-hot-toast';\nimport { Send, Menu, X, MessageSquare, Upload as UploadIcon, FileText, Bot, User } from 'lucide-react';\nimport toast from 'react-hot-toast';\n\n// Components\nimport ChatMessage from './components/ChatMessage';\nimport FileUpload from './components/FileUpload';\nimport FileList from './components/FileList';\nimport VoiceInput from './components/VoiceInput';\n\n// Services\nimport voiceService from './services/voiceService';\n\n// Utils\nimport { cn, generateId } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  // State for user authentication\n  const [user, setUser] = useState({\n    id: '123456789012',\n    name: 'Demo User'\n  }); // Mock user for demo\n\n  // State for chat\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [chatId, setChatId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // State for file management\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  // State for voice\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  // Initialize with greeting message\n  useEffect(() => {\n    setMessages([{\n      role: 'assistant',\n      content: 'Hello! I\\'m your AI assistant. You can ask me questions, and I\\'ll use your uploaded documents to provide relevant answers. You can also speak to me by clicking the microphone button.',\n      timestamp: new Date()\n    }]);\n\n    // Fetch user's files\n    fetchFiles();\n  }, []);\n\n  // Scroll to bottom of messages\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Fetch user's files\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/files?userId=${user.id}`);\n      setFiles(response.data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n\n  // Handle file upload\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('userId', user.id);\n    setUploading(true);\n    setUploadProgress(0);\n    try {\n      const response = await axios.post(`${API_URL}/files/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n\n      // Add new file to files list\n      setFiles([...files, {\n        id: response.data.fileId,\n        filename: response.data.filename,\n        fileType: response.data.fileType,\n        fileSize: response.data.fileSize,\n        uploadDate: new Date(),\n        vectorCount: response.data.chunkCount\n      }]);\n\n      // Add system message about successful upload\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `File \"${response.data.filename}\" uploaded successfully. You can now ask questions about its content.`,\n        timestamp: new Date()\n      }]);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading file:', error);\n\n      // Add error message\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `Error uploading file: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message}`,\n        timestamp: new Date()\n      }]);\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n      // Reset file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  // Handle file deletion\n  const handleDeleteFile = async fileId => {\n    try {\n      await axios.delete(`${API_URL}/files/${fileId}?userId=${user.id}`);\n\n      // Remove file from files list\n      setFiles(files.filter(file => file.id !== fileId));\n\n      // Add system message about successful deletion\n      setMessages([...messages, {\n        role: 'assistant',\n        content: 'File deleted successfully.',\n        timestamp: new Date()\n      }]);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error deleting file:', error);\n\n      // Add error message\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `Error deleting file: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message}`,\n        timestamp: new Date()\n      }]);\n    }\n  };\n\n  // Handle sending message\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add user message to chat\n    const userMessage = {\n      role: 'user',\n      content: input,\n      timestamp: new Date()\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await axios.post(`${API_URL}/chat/message`, {\n        userId: user.id,\n        message: userMessage.content,\n        chatId\n      });\n\n      // Update chat ID if not set\n      if (!chatId) {\n        setChatId(response.data.chatId);\n      }\n\n      // Add assistant response to chat\n      const assistantMessage = {\n        role: 'assistant',\n        content: response.data.message,\n        timestamp: new Date(),\n        sources: response.data.sources\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n\n      // Convert response to speech if TTS is enabled\n      if (isSpeaking) {\n        speakText(response.data.message);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message\n      setMessages(prev => {\n        var _error$response3, _error$response3$data;\n        return [...prev, {\n          role: 'assistant',\n          content: `Error: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message}`,\n          timestamp: new Date()\n        }];\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle voice input\n  const handleVoiceInput = async () => {\n    if (!isListening) {\n      setIsListening(true);\n      try {\n        // In a real implementation, this would use the Web Speech API\n        // For this demo, we'll simulate voice input\n\n        // Add \"listening\" message\n        setMessages([...messages, {\n          role: 'assistant',\n          content: 'Listening...',\n          timestamp: new Date()\n        }]);\n\n        // Simulate delay for speech recognition\n        await new Promise(resolve => setTimeout(resolve, 2000));\n\n        // Simulate recognized text\n        const recognizedText = \"This is a simulated voice input. In a real implementation, this would use the Web Speech API.\";\n\n        // Update input field with recognized text\n        setInput(recognizedText);\n\n        // Remove \"listening\" message\n        setMessages(messages => messages.slice(0, -1));\n      } catch (error) {\n        console.error('Error with voice input:', error);\n\n        // Add error message\n        setMessages(messages => [...messages.slice(0, -1), {\n          role: 'assistant',\n          content: `Error with voice input: ${error.message}`,\n          timestamp: new Date()\n        }]);\n      } finally {\n        setIsListening(false);\n      }\n    } else {\n      var _messages;\n      setIsListening(false);\n\n      // Remove \"listening\" message if present\n      if (((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : _messages.content) === 'Listening...') {\n        setMessages(messages => messages.slice(0, -1));\n      }\n    }\n  };\n\n  // Handle text-to-speech\n  const speakText = async text => {\n    try {\n      // In a real implementation, this would use the Web Speech API or ElevenLabs\n      // For this demo, we'll just log the text\n      console.log('Speaking:', text);\n\n      // Simulate TTS with browser's built-in speech synthesis if available\n      if ('speechSynthesis' in window) {\n        const utterance = new SpeechSynthesisUtterance(text);\n        window.speechSynthesis.speak(utterance);\n      }\n    } catch (error) {\n      console.error('Error with text-to-speech:', error);\n    }\n  };\n\n  // Toggle text-to-speech\n  const toggleTTS = () => {\n    setIsSpeaking(!isSpeaking);\n  };\n\n  // Handle feedback\n  const handleFeedback = async (messageIndex, feedback, reportReason = null) => {\n    try {\n      await axios.post(`${API_URL}/chat/feedback`, {\n        chatId,\n        messageIndex,\n        feedback,\n        reportReason\n      });\n\n      // Update message with feedback\n      const updatedMessages = [...messages];\n      updatedMessages[messageIndex].feedback = feedback;\n      setMessages(updatedMessages);\n\n      // Add feedback confirmation message\n      if (feedback === 'negative' && reportReason) {\n        setMessages([...updatedMessages, {\n          role: 'assistant',\n          content: 'Thank you for your feedback. Your report has been submitted for review.',\n          timestamp: new Date()\n        }]);\n      }\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n    }\n  };\n\n  // Format file size\n  const formatFileSize = bytes => {\n    if (bytes < 1024) return bytes + ' B';else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB';else return (bytes / 1048576).toFixed(1) + ' MB';\n  };\n\n  // Format date\n  const formatDate = date => {\n    if (typeof date === 'string') {\n      date = new Date(date);\n    }\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n  };\n\n  // Get file type icon\n  const getFileTypeIcon = fileType => {\n    switch (fileType) {\n      case 'pdf':\n        return '📄';\n      case 'txt':\n        return '📝';\n      case 'md':\n        return '📋';\n      case 'png':\n      case 'jpg':\n      case 'jpeg':\n      case 'webp':\n        return '🖼️';\n      default:\n        return '📁';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RAG-Enabled AI Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Logged in as: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Supported formats: PDF, TXT, MD, PNG, JPG, JPEG, WEBP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleFileUpload,\n            accept: \".pdf,.txt,.md,.png,.jpg,.jpeg,.webp\",\n            disabled: uploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fileInputRef.current.click(),\n            disabled: uploading,\n            className: \"upload-button\",\n            children: uploading ? `Uploading... ${uploadProgress}%` : 'Select File'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              style: {\n                width: `${uploadProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No files uploaded yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"file-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-icon\",\n                  children: getFileTypeIcon(file.fileType)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-name\",\n                    children: file.filename\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-meta\",\n                    children: [formatFileSize(file.fileSize), \" \\u2022 \", formatDate(file.uploadDate)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteFile(file.id),\n                className: \"delete-button\",\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 21\n              }, this)]\n            }, file.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [message.content, message.sources && message.sources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-sources\",\n                children: /*#__PURE__*/_jsxDEV(\"details\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n                    children: [\"Sources (\", message.sources.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: message.sources.map((source, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: source.text\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatDate(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this), message.role === 'assistant' && index > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-feedback\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleFeedback(index, 'positive'),\n                  className: `feedback-button ${message.feedback === 'positive' ? 'active' : ''}`,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    const reason = prompt('Please provide a reason for reporting this response:');\n                    if (reason) {\n                      handleFeedback(index, 'negative', reason);\n                    }\n                  },\n                  className: `feedback-button ${message.feedback === 'negative' ? 'active' : ''}`,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message assistant-message\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: \"Type your message here...\",\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSendMessage();\n              }\n            },\n            disabled: isLoading || isListening\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleVoiceInput,\n              className: `voice-button ${isListening ? 'listening' : ''}`,\n              title: \"Voice input\",\n              children: \"\\uD83C\\uDFA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTTS,\n              className: `tts-button ${isSpeaking ? 'active' : ''}`,\n              title: \"Text-to-speech\",\n              children: \"\\uD83D\\uDD0A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              disabled: !input.trim() || isLoading,\n              className: \"send-button\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EqI6EJ0ACzmAtQgC5H4vh5Ut2vw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","motion","AnimatePresence","Toaster","Send","Menu","X","MessageSquare","Upload","UploadIcon","FileText","Bot","User","toast","ChatMessage","FileUpload","FileList","VoiceInput","voiceService","cn","generateId","jsxDEV","_jsxDEV","API_URL","App","_s","user","setUser","id","name","messages","setMessages","input","setInput","chatId","setChatId","isLoading","setIsLoading","files","setFiles","uploading","setUploading","uploadProgress","setUploadProgress","isListening","setIsListening","isSpeaking","setIsSpeaking","fileInputRef","messagesEndRef","role","content","timestamp","Date","fetchFiles","_messagesEndRef$curre","current","scrollIntoView","behavior","response","get","data","error","console","handleFileUpload","event","file","target","formData","FormData","append","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","fileId","filename","fileType","fileSize","uploadDate","vectorCount","chunkCount","_error$response","_error$response$data","message","value","handleDeleteFile","delete","filter","_error$response2","_error$response2$data","handleSendMessage","trim","userMessage","userId","assistantMessage","sources","prev","speakText","_error$response3","_error$response3$data","handleVoiceInput","Promise","resolve","setTimeout","recognizedText","slice","_messages","length","text","log","window","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","toggleTTS","handleFeedback","messageIndex","feedback","reportReason","updatedMessages","formatFileSize","bytes","toFixed","formatDate","date","toLocaleDateString","toLocaleTimeString","getFileTypeIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","accept","disabled","onClick","click","style","width","map","index","source","i","reason","prompt","e","placeholder","onKeyDown","key","shiftKey","preventDefault","title","_c","$RefreshReg$"],"sources":["E:/delivery/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Toaster } from 'react-hot-toast';\nimport { Send, Menu, X, MessageSquare, Upload as UploadIcon, FileText, Bot, User } from 'lucide-react';\nimport toast from 'react-hot-toast';\n\n// Components\nimport ChatMessage from './components/ChatMessage';\nimport FileUpload from './components/FileUpload';\nimport FileList from './components/FileList';\nimport VoiceInput from './components/VoiceInput';\n\n// Services\nimport voiceService from './services/voiceService';\n\n// Utils\nimport { cn, generateId } from './utils';\n\nconst API_URL = 'http://localhost:5000/api';\n\nfunction App() {\n  // State for user authentication\n  const [user, setUser] = useState({ id: '123456789012', name: 'Demo User' }); // Mock user for demo\n\n  // State for chat\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [chatId, setChatId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // State for file management\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  // State for voice\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  // Initialize with greeting message\n  useEffect(() => {\n    setMessages([\n      {\n        role: 'assistant',\n        content: 'Hello! I\\'m your AI assistant. You can ask me questions, and I\\'ll use your uploaded documents to provide relevant answers. You can also speak to me by clicking the microphone button.',\n        timestamp: new Date(),\n      }\n    ]);\n\n    // Fetch user's files\n    fetchFiles();\n  }, []);\n\n  // Scroll to bottom of messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Fetch user's files\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/files?userId=${user.id}`);\n      setFiles(response.data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n\n  // Handle file upload\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('userId', user.id);\n\n    setUploading(true);\n    setUploadProgress(0);\n\n    try {\n      const response = await axios.post(`${API_URL}/files/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: (progressEvent) => {\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n\n      // Add new file to files list\n      setFiles([...files, {\n        id: response.data.fileId,\n        filename: response.data.filename,\n        fileType: response.data.fileType,\n        fileSize: response.data.fileSize,\n        uploadDate: new Date(),\n        vectorCount: response.data.chunkCount\n      }]);\n\n      // Add system message about successful upload\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `File \"${response.data.filename}\" uploaded successfully. You can now ask questions about its content.`,\n        timestamp: new Date(),\n      }]);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n\n      // Add error message\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `Error uploading file: ${error.response?.data?.error || error.message}`,\n        timestamp: new Date(),\n      }]);\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n      // Reset file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  // Handle file deletion\n  const handleDeleteFile = async (fileId) => {\n    try {\n      await axios.delete(`${API_URL}/files/${fileId}?userId=${user.id}`);\n\n      // Remove file from files list\n      setFiles(files.filter(file => file.id !== fileId));\n\n      // Add system message about successful deletion\n      setMessages([...messages, {\n        role: 'assistant',\n        content: 'File deleted successfully.',\n        timestamp: new Date(),\n      }]);\n    } catch (error) {\n      console.error('Error deleting file:', error);\n\n      // Add error message\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `Error deleting file: ${error.response?.data?.error || error.message}`,\n        timestamp: new Date(),\n      }]);\n    }\n  };\n\n  // Handle sending message\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add user message to chat\n    const userMessage = {\n      role: 'user',\n      content: input,\n      timestamp: new Date(),\n    };\n\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post(`${API_URL}/chat/message`, {\n        userId: user.id,\n        message: userMessage.content,\n        chatId\n      });\n\n      // Update chat ID if not set\n      if (!chatId) {\n        setChatId(response.data.chatId);\n      }\n\n      // Add assistant response to chat\n      const assistantMessage = {\n        role: 'assistant',\n        content: response.data.message,\n        timestamp: new Date(),\n        sources: response.data.sources\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n\n      // Convert response to speech if TTS is enabled\n      if (isSpeaking) {\n        speakText(response.data.message);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: `Error: ${error.response?.data?.error || error.message}`,\n        timestamp: new Date(),\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle voice input\n  const handleVoiceInput = async () => {\n    if (!isListening) {\n      setIsListening(true);\n\n      try {\n        // In a real implementation, this would use the Web Speech API\n        // For this demo, we'll simulate voice input\n\n        // Add \"listening\" message\n        setMessages([...messages, {\n          role: 'assistant',\n          content: 'Listening...',\n          timestamp: new Date(),\n        }]);\n\n        // Simulate delay for speech recognition\n        await new Promise(resolve => setTimeout(resolve, 2000));\n\n        // Simulate recognized text\n        const recognizedText = \"This is a simulated voice input. In a real implementation, this would use the Web Speech API.\";\n\n        // Update input field with recognized text\n        setInput(recognizedText);\n\n        // Remove \"listening\" message\n        setMessages(messages => messages.slice(0, -1));\n      } catch (error) {\n        console.error('Error with voice input:', error);\n\n        // Add error message\n        setMessages(messages => [...messages.slice(0, -1), {\n          role: 'assistant',\n          content: `Error with voice input: ${error.message}`,\n          timestamp: new Date(),\n        }]);\n      } finally {\n        setIsListening(false);\n      }\n    } else {\n      setIsListening(false);\n\n      // Remove \"listening\" message if present\n      if (messages[messages.length - 1]?.content === 'Listening...') {\n        setMessages(messages => messages.slice(0, -1));\n      }\n    }\n  };\n\n  // Handle text-to-speech\n  const speakText = async (text) => {\n    try {\n      // In a real implementation, this would use the Web Speech API or ElevenLabs\n      // For this demo, we'll just log the text\n      console.log('Speaking:', text);\n\n      // Simulate TTS with browser's built-in speech synthesis if available\n      if ('speechSynthesis' in window) {\n        const utterance = new SpeechSynthesisUtterance(text);\n        window.speechSynthesis.speak(utterance);\n      }\n    } catch (error) {\n      console.error('Error with text-to-speech:', error);\n    }\n  };\n\n  // Toggle text-to-speech\n  const toggleTTS = () => {\n    setIsSpeaking(!isSpeaking);\n  };\n\n  // Handle feedback\n  const handleFeedback = async (messageIndex, feedback, reportReason = null) => {\n    try {\n      await axios.post(`${API_URL}/chat/feedback`, {\n        chatId,\n        messageIndex,\n        feedback,\n        reportReason\n      });\n\n      // Update message with feedback\n      const updatedMessages = [...messages];\n      updatedMessages[messageIndex].feedback = feedback;\n      setMessages(updatedMessages);\n\n      // Add feedback confirmation message\n      if (feedback === 'negative' && reportReason) {\n        setMessages([...updatedMessages, {\n          role: 'assistant',\n          content: 'Thank you for your feedback. Your report has been submitted for review.',\n          timestamp: new Date(),\n        }]);\n      }\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n    }\n  };\n\n  // Format file size\n  const formatFileSize = (bytes) => {\n    if (bytes < 1024) return bytes + ' B';\n    else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB';\n    else return (bytes / 1048576).toFixed(1) + ' MB';\n  };\n\n  // Format date\n  const formatDate = (date) => {\n    if (typeof date === 'string') {\n      date = new Date(date);\n    }\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n  };\n\n  // Get file type icon\n  const getFileTypeIcon = (fileType) => {\n    switch (fileType) {\n      case 'pdf': return '📄';\n      case 'txt': return '📝';\n      case 'md': return '📋';\n      case 'png':\n      case 'jpg':\n      case 'jpeg':\n      case 'webp':\n        return '🖼️';\n      default: return '📁';\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>RAG-Enabled AI Chatbot</h1>\n        <div className=\"user-info\">\n          <span>Logged in as: {user.name}</span>\n        </div>\n      </header>\n\n      <div className=\"main-container\">\n        <div className=\"sidebar\">\n          <div className=\"file-upload\">\n            <h2>Upload Files</h2>\n            <p>Supported formats: PDF, TXT, MD, PNG, JPG, JPEG, WEBP</p>\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileUpload}\n              accept=\".pdf,.txt,.md,.png,.jpg,.jpeg,.webp\"\n              disabled={uploading}\n            />\n            <button\n              onClick={() => fileInputRef.current.click()}\n              disabled={uploading}\n              className=\"upload-button\"\n            >\n              {uploading ? `Uploading... ${uploadProgress}%` : 'Select File'}\n            </button>\n            {uploading && (\n              <div className=\"progress-bar\">\n                <div\n                  className=\"progress\"\n                  style={{ width: `${uploadProgress}%` }}\n                ></div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"file-list\">\n            <h2>Your Files</h2>\n            {files.length === 0 ? (\n              <p>No files uploaded yet.</p>\n            ) : (\n              <ul>\n                {files.map(file => (\n                  <li key={file.id} className=\"file-item\">\n                    <div className=\"file-info\">\n                      <span className=\"file-icon\">{getFileTypeIcon(file.fileType)}</span>\n                      <div className=\"file-details\">\n                        <span className=\"file-name\">{file.filename}</span>\n                        <span className=\"file-meta\">\n                          {formatFileSize(file.fileSize)} • {formatDate(file.uploadDate)}\n                        </span>\n                      </div>\n                    </div>\n                    <button\n                      onClick={() => handleDeleteFile(file.id)}\n                      className=\"delete-button\"\n                    >\n                      🗑️\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n\n        <div className=\"chat-container\">\n          <div className=\"messages\">\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className={`message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`}\n              >\n                <div className=\"message-content\">\n                  {message.content}\n\n                  {message.sources && message.sources.length > 0 && (\n                    <div className=\"message-sources\">\n                      <details>\n                        <summary>Sources ({message.sources.length})</summary>\n                        <ul>\n                          {message.sources.map((source, i) => (\n                            <li key={i}>{source.text}</li>\n                          ))}\n                        </ul>\n                      </details>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"message-meta\">\n                  <span className=\"message-time\">\n                    {formatDate(message.timestamp)}\n                  </span>\n\n                  {message.role === 'assistant' && index > 0 && (\n                    <div className=\"message-feedback\">\n                      <button\n                        onClick={() => handleFeedback(index, 'positive')}\n                        className={`feedback-button ${message.feedback === 'positive' ? 'active' : ''}`}\n                      >\n                        👍\n                      </button>\n                      <button\n                        onClick={() => {\n                          const reason = prompt('Please provide a reason for reporting this response:');\n                          if (reason) {\n                            handleFeedback(index, 'negative', reason);\n                          }\n                        }}\n                        className={`feedback-button ${message.feedback === 'negative' ? 'active' : ''}`}\n                      >\n                        👎\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n\n            {isLoading && (\n              <div className=\"message assistant-message\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            )}\n\n            <div ref={messagesEndRef} />\n          </div>\n\n          <div className=\"input-container\">\n            <textarea\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message here...\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage();\n                }\n              }}\n              disabled={isLoading || isListening}\n            />\n\n            <div className=\"input-buttons\">\n              <button\n                onClick={handleVoiceInput}\n                className={`voice-button ${isListening ? 'listening' : ''}`}\n                title=\"Voice input\"\n              >\n                🎤\n              </button>\n\n              <button\n                onClick={toggleTTS}\n                className={`tts-button ${isSpeaking ? 'active' : ''}`}\n                title=\"Text-to-speech\"\n              >\n                🔊\n              </button>\n\n              <button\n                onClick={handleSendMessage}\n                disabled={!input.trim() || isLoading}\n                className=\"send-button\"\n              >\n                Send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}