{"ast":null,"code":"var _jsxFileName = \"E:\\\\delivery\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Frontend implementation for the React application\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// API configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api';\nfunction App() {\n  _s();\n  // State for user authentication\n  const [user, setUser] = useState({\n    id: '123456789012',\n    name: 'Aman'\n  }); // Mock user for demo\n\n  // State for chat\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [chatId, setChatId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // State for file management\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  // State for voice\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [speechEnabled, setSpeechEnabled] = useState(false);\n  const [voiceSupported, setVoiceSupported] = useState(false);\n  const [speechRecognition, setSpeechRecognition] = useState(null);\n  const [speechSynthesis, setSpeechSynthesis] = useState(null);\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const synthRef = useRef(null);\n\n  // Initialize voice capabilities\n  useEffect(() => {\n    // Check for Web Speech API support\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const speechSynth = window.speechSynthesis;\n    if (SpeechRecognition) {\n      const recognition = new SpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setInput(transcript);\n        setIsListening(false);\n      };\n      recognition.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: `Voice recognition error: ${event.error}. Please try again.`,\n          timestamp: new Date()\n        }]);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n      setSpeechRecognition(recognition);\n      setVoiceSupported(true);\n    }\n    if (speechSynth) {\n      synthRef.current = speechSynth;\n      setSpeechSynthesis(speechSynth);\n    }\n\n    // Initialize with greeting message\n    setMessages([{\n      role: 'assistant',\n      content: `Hello ${user.name}! I'm your AI assistant. You can ask me questions, and I'll use your uploaded documents to provide relevant answers. ${SpeechRecognition ? 'You can also speak to me by clicking the microphone button.' : ''}`,\n      timestamp: new Date()\n    }]);\n\n    // Fetch user's files\n    fetchFiles();\n  }, [user.name]);\n\n  // Scroll to bottom of messages\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Fetch user's files\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/files?userId=${user.id}`);\n      setFiles(response.data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n\n  // Handle file upload\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('userId', user.id);\n    setUploading(true);\n    setUploadProgress(0);\n    try {\n      const response = await axios.post(`${API_URL}/files/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n\n      // Add new file to files list\n      setFiles([...files, {\n        id: response.data.fileId,\n        filename: response.data.filename,\n        fileType: response.data.fileType,\n        fileSize: response.data.fileSize,\n        uploadDate: new Date(),\n        vectorCount: response.data.chunkCount\n      }]);\n\n      // Add system message about successful upload\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `File \"${response.data.filename}\" uploaded successfully. You can now ask questions about its content.`,\n        timestamp: new Date()\n      }]);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading file:', error);\n\n      // Add error message\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `Error uploading file: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message}`,\n        timestamp: new Date()\n      }]);\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n      // Reset file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  // Handle file deletion\n  const handleDeleteFile = async fileId => {\n    try {\n      await axios.delete(`${API_URL}/files/${fileId}?userId=${user.id}`);\n\n      // Remove file from files list\n      setFiles(files.filter(file => file.id !== fileId));\n\n      // Add system message about successful deletion\n      setMessages([...messages, {\n        role: 'assistant',\n        content: 'File deleted successfully.',\n        timestamp: new Date()\n      }]);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error deleting file:', error);\n\n      // Add error message\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `Error deleting file: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message}`,\n        timestamp: new Date()\n      }]);\n    }\n  };\n\n  // Handle sending message\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add user message to chat\n    const userMessage = {\n      role: 'user',\n      content: input,\n      timestamp: new Date()\n    };\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await axios.post(`${API_URL}/chat/message`, {\n        userId: user.id,\n        message: userMessage.content,\n        chatId\n      });\n\n      // Update chat ID if not set\n      if (!chatId) {\n        setChatId(response.data.chatId);\n      }\n\n      // Add assistant response to chat\n      const assistantMessage = {\n        role: 'assistant',\n        content: response.data.message,\n        timestamp: new Date(),\n        sources: response.data.sources\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n\n      // Convert response to speech if TTS is enabled\n      if (speechEnabled) {\n        speakText(response.data.message);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message\n      setMessages(prev => {\n        var _error$response3, _error$response3$data;\n        return [...prev, {\n          role: 'assistant',\n          content: `Error: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message}`,\n          timestamp: new Date()\n        }];\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle voice input\n  const handleVoiceInput = () => {\n    if (!voiceSupported) {\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Voice recognition is not supported in your browser. Please use Chrome, Edge, or Safari.',\n        timestamp: new Date()\n      }]);\n      return;\n    }\n    if (!isListening) {\n      try {\n        recognitionRef.current.start();\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: 'Listening... Speak now!',\n          timestamp: new Date()\n        }]);\n      } catch (error) {\n        console.error('Error starting voice recognition:', error);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: 'Error starting voice recognition. Please try again.',\n          timestamp: new Date()\n        }]);\n      }\n    } else {\n      recognitionRef.current.stop();\n      setIsListening(false);\n      // Remove listening message\n      setMessages(prev => prev.filter(msg => msg.content !== 'Listening... Speak now!'));\n    }\n  };\n\n  // Handle text-to-speech\n  const speakText = text => {\n    try {\n      if (!synthRef.current) {\n        console.warn('Speech synthesis not available');\n        return;\n      }\n\n      // Stop any current speech\n      synthRef.current.cancel();\n\n      // Create utterance\n      const utterance = new SpeechSynthesisUtterance(text);\n\n      // Configure voice settings\n      utterance.rate = 0.9;\n      utterance.pitch = 1;\n      utterance.volume = 0.8;\n\n      // Try to use a more natural voice if available\n      const voices = synthRef.current.getVoices();\n      const preferredVoice = voices.find(voice => voice.name.includes('Google') || voice.name.includes('Microsoft') || voice.lang.startsWith('en'));\n      if (preferredVoice) {\n        utterance.voice = preferredVoice;\n      }\n      utterance.onstart = () => {\n        setIsSpeaking(true);\n      };\n      utterance.onend = () => {\n        setIsSpeaking(false);\n      };\n      utterance.onerror = event => {\n        console.error('Speech synthesis error:', event.error);\n        setIsSpeaking(false);\n      };\n      synthRef.current.speak(utterance);\n    } catch (error) {\n      console.error('Error with text-to-speech:', error);\n      setIsSpeaking(false);\n    }\n  };\n\n  // Toggle text-to-speech\n  const toggleTTS = () => {\n    if (speechEnabled) {\n      // Stop current speech if any\n      if (synthRef.current) {\n        synthRef.current.cancel();\n      }\n      setIsSpeaking(false);\n    }\n    setSpeechEnabled(!speechEnabled);\n  };\n\n  // Stop speech\n  const stopSpeech = () => {\n    if (synthRef.current) {\n      synthRef.current.cancel();\n    }\n    setIsSpeaking(false);\n  };\n\n  // Handle feedback\n  const handleFeedback = async (messageIndex, feedback, reportReason = null) => {\n    try {\n      await axios.post(`${API_URL}/chat/feedback`, {\n        chatId,\n        messageIndex,\n        feedback,\n        reportReason\n      });\n\n      // Update message with feedback\n      const updatedMessages = [...messages];\n      updatedMessages[messageIndex].feedback = feedback;\n      setMessages(updatedMessages);\n\n      // Add feedback confirmation message\n      if (feedback === 'negative' && reportReason) {\n        setMessages([...updatedMessages, {\n          role: 'assistant',\n          content: 'Thank you for your feedback. Your report has been submitted for review.',\n          timestamp: new Date()\n        }]);\n      }\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n    }\n  };\n\n  // Format file size\n  const formatFileSize = bytes => {\n    if (bytes < 1024) return bytes + ' B';else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB';else return (bytes / 1048576).toFixed(1) + ' MB';\n  };\n\n  // Format date\n  const formatDate = date => {\n    if (typeof date === 'string') {\n      date = new Date(date);\n    }\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n  };\n\n  // Get file type icon\n  const getFileTypeIcon = fileType => {\n    switch (fileType) {\n      case 'pdf':\n        return '📄';\n      case 'txt':\n        return '📝';\n      case 'md':\n        return '📋';\n      case 'png':\n      case 'jpg':\n      case 'jpeg':\n      case 'webp':\n        return '🖼️';\n      default:\n        return '📁';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RAG-Enabled AI Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Logged in as: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Upload Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Supported formats: PDF, TXT, MD, PNG, JPG, JPEG, WEBP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleFileUpload,\n            accept: \".pdf,.txt,.md,.png,.jpg,.jpeg,.webp\",\n            disabled: uploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fileInputRef.current.click(),\n            disabled: uploading,\n            className: \"upload-button\",\n            children: uploading ? `Uploading... ${uploadProgress}%` : 'Select File'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              style: {\n                width: `${uploadProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Your Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No files uploaded yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"file-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-icon\",\n                  children: getFileTypeIcon(file.fileType)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"file-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-name\",\n                    children: file.filename\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"file-meta\",\n                    children: [formatFileSize(file.fileSize), \" \\u2022 \", formatDate(file.uploadDate)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteFile(file.id),\n                className: \"delete-button\",\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 21\n              }, this)]\n            }, file.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [message.content, message.sources && message.sources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-sources\",\n                children: /*#__PURE__*/_jsxDEV(\"details\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n                    children: [\"Sources (\", message.sources.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: message.sources.map((source, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: source.text\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatDate(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), message.role === 'assistant' && index > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-feedback\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleFeedback(index, 'positive'),\n                  className: `feedback-button ${message.feedback === 'positive' ? 'active' : ''}`,\n                  children: \"\\uD83D\\uDC4D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    const reason = prompt('Please provide a reason for reporting this response:');\n                    if (reason) {\n                      handleFeedback(index, 'negative', reason);\n                    }\n                  },\n                  className: `feedback-button ${message.feedback === 'negative' ? 'active' : ''}`,\n                  children: \"\\uD83D\\uDC4E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message assistant-message\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: \"Type your message here...\",\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSendMessage();\n              }\n            },\n            disabled: isLoading || isListening\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleVoiceInput,\n              className: `voice-button ${isListening ? 'listening' : ''}`,\n              title: \"Voice input\",\n              children: \"\\uD83C\\uDFA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleTTS,\n              className: `tts-button ${isSpeaking ? 'active' : ''}`,\n              title: \"Text-to-speech\",\n              children: \"\\uD83D\\uDD0A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              disabled: !input.trim() || isLoading,\n              className: \"send-button\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y8gOuGnwJX2Wo70OBU+PEKQNvYY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","API_URL","App","_s","user","setUser","id","name","messages","setMessages","input","setInput","chatId","setChatId","isLoading","setIsLoading","files","setFiles","uploading","setUploading","uploadProgress","setUploadProgress","isListening","setIsListening","isSpeaking","setIsSpeaking","speechEnabled","setSpeechEnabled","voiceSupported","setVoiceSupported","speechRecognition","setSpeechRecognition","speechSynthesis","setSpeechSynthesis","fileInputRef","messagesEndRef","recognitionRef","synthRef","SpeechRecognition","window","webkitSpeechRecognition","speechSynth","recognition","continuous","interimResults","lang","onstart","onresult","event","transcript","results","onerror","console","error","prev","role","content","timestamp","Date","onend","current","fetchFiles","_messagesEndRef$curre","scrollIntoView","behavior","response","get","data","handleFileUpload","file","target","formData","FormData","append","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","fileId","filename","fileType","fileSize","uploadDate","vectorCount","chunkCount","_error$response","_error$response$data","message","value","handleDeleteFile","delete","filter","_error$response2","_error$response2$data","handleSendMessage","trim","userMessage","userId","assistantMessage","sources","speakText","_error$response3","_error$response3$data","handleVoiceInput","start","stop","msg","text","warn","cancel","utterance","SpeechSynthesisUtterance","rate","pitch","volume","voices","getVoices","preferredVoice","find","voice","includes","startsWith","speak","toggleTTS","stopSpeech","handleFeedback","messageIndex","feedback","reportReason","updatedMessages","formatFileSize","bytes","toFixed","formatDate","date","toLocaleDateString","toLocaleTimeString","getFileTypeIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","accept","disabled","onClick","click","style","width","length","map","index","source","i","reason","prompt","e","placeholder","onKeyDown","key","shiftKey","preventDefault","title","_c","$RefreshReg$"],"sources":["E:/delivery/frontend/src/App.js"],"sourcesContent":["// Frontend implementation for the React application\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// API configuration\nconst API_URL = 'http://localhost:5000/api';\n\nfunction App() {\n  // State for user authentication\n  const [user, setUser] = useState({ id: '123456789012', name: 'Aman' }); // Mock user for demo\n\n  // State for chat\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [chatId, setChatId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // State for file management\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  // State for voice\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [speechEnabled, setSpeechEnabled] = useState(false);\n  const [voiceSupported, setVoiceSupported] = useState(false);\n  const [speechRecognition, setSpeechRecognition] = useState(null);\n  const [speechSynthesis, setSpeechSynthesis] = useState(null);\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const synthRef = useRef(null);\n\n  // Initialize voice capabilities\n  useEffect(() => {\n    // Check for Web Speech API support\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const speechSynth = window.speechSynthesis;\n\n    if (SpeechRecognition) {\n      const recognition = new SpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n\n      recognition.onresult = (event) => {\n        const transcript = event.results[0][0].transcript;\n        setInput(transcript);\n        setIsListening(false);\n      };\n\n      recognition.onerror = (event) => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: `Voice recognition error: ${event.error}. Please try again.`,\n          timestamp: new Date(),\n        }]);\n      };\n\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n\n      recognitionRef.current = recognition;\n      setSpeechRecognition(recognition);\n      setVoiceSupported(true);\n    }\n\n    if (speechSynth) {\n      synthRef.current = speechSynth;\n      setSpeechSynthesis(speechSynth);\n    }\n\n    // Initialize with greeting message\n    setMessages([\n      {\n        role: 'assistant',\n        content: `Hello ${user.name}! I'm your AI assistant. You can ask me questions, and I'll use your uploaded documents to provide relevant answers. ${SpeechRecognition ? 'You can also speak to me by clicking the microphone button.' : ''}`,\n        timestamp: new Date(),\n      }\n    ]);\n\n    // Fetch user's files\n    fetchFiles();\n  }, [user.name]);\n\n  // Scroll to bottom of messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Fetch user's files\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/files?userId=${user.id}`);\n      setFiles(response.data.files || []);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n\n  // Handle file upload\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('userId', user.id);\n\n    setUploading(true);\n    setUploadProgress(0);\n\n    try {\n      const response = await axios.post(`${API_URL}/files/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: (progressEvent) => {\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n\n      // Add new file to files list\n      setFiles([...files, {\n        id: response.data.fileId,\n        filename: response.data.filename,\n        fileType: response.data.fileType,\n        fileSize: response.data.fileSize,\n        uploadDate: new Date(),\n        vectorCount: response.data.chunkCount\n      }]);\n\n      // Add system message about successful upload\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `File \"${response.data.filename}\" uploaded successfully. You can now ask questions about its content.`,\n        timestamp: new Date(),\n      }]);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n\n      // Add error message\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `Error uploading file: ${error.response?.data?.error || error.message}`,\n        timestamp: new Date(),\n      }]);\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n      // Reset file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  // Handle file deletion\n  const handleDeleteFile = async (fileId) => {\n    try {\n      await axios.delete(`${API_URL}/files/${fileId}?userId=${user.id}`);\n\n      // Remove file from files list\n      setFiles(files.filter(file => file.id !== fileId));\n\n      // Add system message about successful deletion\n      setMessages([...messages, {\n        role: 'assistant',\n        content: 'File deleted successfully.',\n        timestamp: new Date(),\n      }]);\n    } catch (error) {\n      console.error('Error deleting file:', error);\n\n      // Add error message\n      setMessages([...messages, {\n        role: 'assistant',\n        content: `Error deleting file: ${error.response?.data?.error || error.message}`,\n        timestamp: new Date(),\n      }]);\n    }\n  };\n\n  // Handle sending message\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add user message to chat\n    const userMessage = {\n      role: 'user',\n      content: input,\n      timestamp: new Date(),\n    };\n\n    setMessages([...messages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post(`${API_URL}/chat/message`, {\n        userId: user.id,\n        message: userMessage.content,\n        chatId\n      });\n\n      // Update chat ID if not set\n      if (!chatId) {\n        setChatId(response.data.chatId);\n      }\n\n      // Add assistant response to chat\n      const assistantMessage = {\n        role: 'assistant',\n        content: response.data.message,\n        timestamp: new Date(),\n        sources: response.data.sources\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n\n      // Convert response to speech if TTS is enabled\n      if (speechEnabled) {\n        speakText(response.data.message);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: `Error: ${error.response?.data?.error || error.message}`,\n        timestamp: new Date(),\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle voice input\n  const handleVoiceInput = () => {\n    if (!voiceSupported) {\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Voice recognition is not supported in your browser. Please use Chrome, Edge, or Safari.',\n        timestamp: new Date(),\n      }]);\n      return;\n    }\n\n    if (!isListening) {\n      try {\n        recognitionRef.current.start();\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: 'Listening... Speak now!',\n          timestamp: new Date(),\n        }]);\n      } catch (error) {\n        console.error('Error starting voice recognition:', error);\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: 'Error starting voice recognition. Please try again.',\n          timestamp: new Date(),\n        }]);\n      }\n    } else {\n      recognitionRef.current.stop();\n      setIsListening(false);\n      // Remove listening message\n      setMessages(prev => prev.filter(msg => msg.content !== 'Listening... Speak now!'));\n    }\n  };\n\n  // Handle text-to-speech\n  const speakText = (text) => {\n    try {\n      if (!synthRef.current) {\n        console.warn('Speech synthesis not available');\n        return;\n      }\n\n      // Stop any current speech\n      synthRef.current.cancel();\n\n      // Create utterance\n      const utterance = new SpeechSynthesisUtterance(text);\n\n      // Configure voice settings\n      utterance.rate = 0.9;\n      utterance.pitch = 1;\n      utterance.volume = 0.8;\n\n      // Try to use a more natural voice if available\n      const voices = synthRef.current.getVoices();\n      const preferredVoice = voices.find(voice =>\n        voice.name.includes('Google') ||\n        voice.name.includes('Microsoft') ||\n        voice.lang.startsWith('en')\n      );\n\n      if (preferredVoice) {\n        utterance.voice = preferredVoice;\n      }\n\n      utterance.onstart = () => {\n        setIsSpeaking(true);\n      };\n\n      utterance.onend = () => {\n        setIsSpeaking(false);\n      };\n\n      utterance.onerror = (event) => {\n        console.error('Speech synthesis error:', event.error);\n        setIsSpeaking(false);\n      };\n\n      synthRef.current.speak(utterance);\n    } catch (error) {\n      console.error('Error with text-to-speech:', error);\n      setIsSpeaking(false);\n    }\n  };\n\n  // Toggle text-to-speech\n  const toggleTTS = () => {\n    if (speechEnabled) {\n      // Stop current speech if any\n      if (synthRef.current) {\n        synthRef.current.cancel();\n      }\n      setIsSpeaking(false);\n    }\n    setSpeechEnabled(!speechEnabled);\n  };\n\n  // Stop speech\n  const stopSpeech = () => {\n    if (synthRef.current) {\n      synthRef.current.cancel();\n    }\n    setIsSpeaking(false);\n  };\n\n  // Handle feedback\n  const handleFeedback = async (messageIndex, feedback, reportReason = null) => {\n    try {\n      await axios.post(`${API_URL}/chat/feedback`, {\n        chatId,\n        messageIndex,\n        feedback,\n        reportReason\n      });\n\n      // Update message with feedback\n      const updatedMessages = [...messages];\n      updatedMessages[messageIndex].feedback = feedback;\n      setMessages(updatedMessages);\n\n      // Add feedback confirmation message\n      if (feedback === 'negative' && reportReason) {\n        setMessages([...updatedMessages, {\n          role: 'assistant',\n          content: 'Thank you for your feedback. Your report has been submitted for review.',\n          timestamp: new Date(),\n        }]);\n      }\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n    }\n  };\n\n  // Format file size\n  const formatFileSize = (bytes) => {\n    if (bytes < 1024) return bytes + ' B';\n    else if (bytes < 1048576) return (bytes / 1024).toFixed(1) + ' KB';\n    else return (bytes / 1048576).toFixed(1) + ' MB';\n  };\n\n  // Format date\n  const formatDate = (date) => {\n    if (typeof date === 'string') {\n      date = new Date(date);\n    }\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n  };\n\n  // Get file type icon\n  const getFileTypeIcon = (fileType) => {\n    switch (fileType) {\n      case 'pdf': return '📄';\n      case 'txt': return '📝';\n      case 'md': return '📋';\n      case 'png':\n      case 'jpg':\n      case 'jpeg':\n      case 'webp':\n        return '🖼️';\n      default: return '📁';\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>RAG-Enabled AI Chatbot</h1>\n        <div className=\"user-info\">\n          <span>Logged in as: {user.name}</span>\n        </div>\n      </header>\n\n      <div className=\"main-container\">\n        <div className=\"sidebar\">\n          <div className=\"file-upload\">\n            <h2>Upload Files</h2>\n            <p>Supported formats: PDF, TXT, MD, PNG, JPG, JPEG, WEBP</p>\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileUpload}\n              accept=\".pdf,.txt,.md,.png,.jpg,.jpeg,.webp\"\n              disabled={uploading}\n            />\n            <button\n              onClick={() => fileInputRef.current.click()}\n              disabled={uploading}\n              className=\"upload-button\"\n            >\n              {uploading ? `Uploading... ${uploadProgress}%` : 'Select File'}\n            </button>\n            {uploading && (\n              <div className=\"progress-bar\">\n                <div\n                  className=\"progress\"\n                  style={{ width: `${uploadProgress}%` }}\n                ></div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"file-list\">\n            <h2>Your Files</h2>\n            {files.length === 0 ? (\n              <p>No files uploaded yet.</p>\n            ) : (\n              <ul>\n                {files.map(file => (\n                  <li key={file.id} className=\"file-item\">\n                    <div className=\"file-info\">\n                      <span className=\"file-icon\">{getFileTypeIcon(file.fileType)}</span>\n                      <div className=\"file-details\">\n                        <span className=\"file-name\">{file.filename}</span>\n                        <span className=\"file-meta\">\n                          {formatFileSize(file.fileSize)} • {formatDate(file.uploadDate)}\n                        </span>\n                      </div>\n                    </div>\n                    <button\n                      onClick={() => handleDeleteFile(file.id)}\n                      className=\"delete-button\"\n                    >\n                      🗑️\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n\n        <div className=\"chat-container\">\n          <div className=\"messages\">\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className={`message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`}\n              >\n                <div className=\"message-content\">\n                  {message.content}\n\n                  {message.sources && message.sources.length > 0 && (\n                    <div className=\"message-sources\">\n                      <details>\n                        <summary>Sources ({message.sources.length})</summary>\n                        <ul>\n                          {message.sources.map((source, i) => (\n                            <li key={i}>{source.text}</li>\n                          ))}\n                        </ul>\n                      </details>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"message-meta\">\n                  <span className=\"message-time\">\n                    {formatDate(message.timestamp)}\n                  </span>\n\n                  {message.role === 'assistant' && index > 0 && (\n                    <div className=\"message-feedback\">\n                      <button\n                        onClick={() => handleFeedback(index, 'positive')}\n                        className={`feedback-button ${message.feedback === 'positive' ? 'active' : ''}`}\n                      >\n                        👍\n                      </button>\n                      <button\n                        onClick={() => {\n                          const reason = prompt('Please provide a reason for reporting this response:');\n                          if (reason) {\n                            handleFeedback(index, 'negative', reason);\n                          }\n                        }}\n                        className={`feedback-button ${message.feedback === 'negative' ? 'active' : ''}`}\n                      >\n                        👎\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n\n            {isLoading && (\n              <div className=\"message assistant-message\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            )}\n\n            <div ref={messagesEndRef} />\n          </div>\n\n          <div className=\"input-container\">\n            <textarea\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message here...\"\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage();\n                }\n              }}\n              disabled={isLoading || isListening}\n            />\n\n            <div className=\"input-buttons\">\n              <button\n                onClick={handleVoiceInput}\n                className={`voice-button ${isListening ? 'listening' : ''}`}\n                title=\"Voice input\"\n              >\n                🎤\n              </button>\n\n              <button\n                onClick={toggleTTS}\n                className={`tts-button ${isSpeaking ? 'active' : ''}`}\n                title=\"Text-to-speech\"\n              >\n                🔊\n              </button>\n\n              <button\n                onClick={handleSendMessage}\n                disabled={!input.trim() || isLoading}\n                className=\"send-button\"\n              >\n                Send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}